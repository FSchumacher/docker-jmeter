# Triggers a Docker workflow on push events and PRs but
# pushes to DockerHub only for push on the master branch.
# Runs GHC unit tests before DockerHub push.
#
# Author: Just van den Broecke - 2021
#
name: Docker Build ‚öì

on: [push, pull_request]

jobs:
  # Single job now to build Docker Image, run GHC unit tests, and push to DockerHub
  build_test_push:
    name: Build, Test and Push Docker Image to DockerHub

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - jmeter-branch: 5.4
            jmeter-version: "5.4.2"
            jvm-version: "eclipse-temurin/11-jre-alpine"
            jvm-version-label: "eclipse-temurin-11-jre-alpine"
            tags-latest: "latest"

    # v2 https://github.com/docker/build-push-action/blob/master/UPGRADE.md
    steps:
      - name: Checkout ‚úÖ
        uses: actions/checkout@v2

      - name: Prepare üì¶
        id: prep
        run: |
          DOCKER_IMAGE=anasoid/jmeter
          VERSION="${{ matrix.jmeter-version }}"
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Show Image Settings üì¶
        run: echo "IMAGE=${{ steps.prep.outputs.image }} VERSION=${{ steps.prep.outputs.version }} TAGS=${{ steps.prep.outputs.tags }}"

      - name: Set up Docker Buildx üì¶
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Docker Build only - retain local Image üì¶
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.jmeter-branch }}/${{ matrix.jvm-version }}/Dockerfile
          load: true
          push: false
          build-args: |
            JMETER_VERSION=${{ matrix.jmeter-version }}

          tags: |
            ${{ steps.prep.outputs.tags }}
            ${{ steps.prep.outputs.image }}:${{ matrix.jmeter-version }}-${{ matrix.jvm-version-label }}
            ${{ steps.prep.outputs.image }}:${{ matrix.jmeter-branch }}
            ${{ steps.prep.outputs.image }}:${{ matrix.jmeter-branch }}-${{ matrix.jvm-version-label }}
            ${{ steps.prep.outputs.image }}:${{ matrix.tags-latest }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ github.sha }}
            "org.opencontainers.image.version": "7.15.1"

#      - name: TODO Tests with Docker Image ‚öôÔ∏è
#        run: docker run  --entrypoint "/run-tests.sh" ${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.version }}
